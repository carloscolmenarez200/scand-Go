package com.cencosud.scanandgo.cybersource.client;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.5.0.6
//
// Created by Quasar Development 
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.math.BigInteger;
import java.util.ArrayList;
import org.ksoap2.serialization.PropertyInfo;

public class AirlineData extends AttributeContainer implements KvmSerializable
{

    
    public String agentCode;
    
    public String agentName;
    
    public String ticketIssuerCity;
    
    public String ticketIssuerState;
    
    public String ticketIssuerPostalCode;
    
    public String ticketIssuerCountry;
    
    public String ticketIssuerAddress;
    
    public String ticketIssuerCode;
    
    public String ticketIssuerName;
    
    public String ticketNumber;
    
    public BigInteger checkDigit;
    
    public BigInteger restrictedTicketIndicator;
    
    public String transactionType;
    
    public String extendedPaymentCode;
    
    public String carrierName;
    
    public String passengerName;
    
    public ArrayList< Passenger> passenger =new ArrayList<Passenger >();
    
    public String customerCode;
    
    public String documentType;
    
    public String documentNumber;
    
    public String documentNumberOfParts;
    
    public String invoiceNumber;
    
    public String invoiceDate;
    
    public String chargeDetails;
    
    public String bookingReference;
    
    public String totalFee;
    
    public String clearingSequence;
    
    public BigInteger clearingCount;
    
    public String totalClearingAmount;
    
    public ArrayList< Leg> leg =new ArrayList<Leg >();
    
    public String numberOfPassengers;
    
    public String reservationSystem;
    
    public String processIdentifier;
    
    public String iataNumericCode;
    
    public String ticketIssueDate;
    
    public String electronicTicket;
    
    public String originalTicketNumber;
    
    public String purchaseType;
    
    public String creditReasonIndicator;
    
    public String ticketUpdateIndicator;
    
    public String planNumber;
    
    public String arrivalDate;
    
    public String ticketRestrictionText;
    
    public String exchangeTicketAmount;
    
    public String exchangeTicketFee;
    
    public String journeyType;
    private transient java.lang.Object __source;    
    

    
    
    
    public void loadFromSoap(java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
        if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;
        __source=inObj; 
        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                if(!loadProperty(info,soapObject,__envelope))
                {
                }
            } 
        }

    }

    
    protected boolean loadProperty(PropertyInfo info,SoapObject soapObject,ExtendedSoapSerializationEnvelope __envelope)
    {
        java.lang.Object obj = info.getValue();
        if (info.name.equals("agentCode"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.agentCode = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.agentCode = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("agentName"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.agentName = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.agentName = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("ticketIssuerCity"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.ticketIssuerCity = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.ticketIssuerCity = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("ticketIssuerState"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.ticketIssuerState = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.ticketIssuerState = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("ticketIssuerPostalCode"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.ticketIssuerPostalCode = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.ticketIssuerPostalCode = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("ticketIssuerCountry"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.ticketIssuerCountry = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.ticketIssuerCountry = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("ticketIssuerAddress"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.ticketIssuerAddress = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.ticketIssuerAddress = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("ticketIssuerCode"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.ticketIssuerCode = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.ticketIssuerCode = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("ticketIssuerName"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.ticketIssuerName = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.ticketIssuerName = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("ticketNumber"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.ticketNumber = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.ticketNumber = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("checkDigit"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.checkDigit = new BigInteger(j.toString());
                    }
                }
                else if (obj instanceof BigInteger){
                    this.checkDigit = (BigInteger)obj;
                }
            }
            return true;
        }
        if (info.name.equals("restrictedTicketIndicator"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.restrictedTicketIndicator = new BigInteger(j.toString());
                    }
                }
                else if (obj instanceof BigInteger){
                    this.restrictedTicketIndicator = (BigInteger)obj;
                }
            }
            return true;
        }
        if (info.name.equals("transactionType"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.transactionType = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.transactionType = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("extendedPaymentCode"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.extendedPaymentCode = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.extendedPaymentCode = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("carrierName"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.carrierName = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.carrierName = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("passengerName"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.passengerName = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.passengerName = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("passenger"))
        {
            if(obj!=null)
            {
                if(this.passenger==null)
                {
                    this.passenger = new java.util.ArrayList< Passenger>();
                }
                java.lang.Object j =obj;
                Passenger j1= (Passenger)__envelope.get(j,Passenger.class,false);
                this.passenger.add(j1);
            }
            return true;
        }
        if (info.name.equals("customerCode"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.customerCode = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.customerCode = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("documentType"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.documentType = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.documentType = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("documentNumber"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.documentNumber = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.documentNumber = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("documentNumberOfParts"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.documentNumberOfParts = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.documentNumberOfParts = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("invoiceNumber"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.invoiceNumber = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.invoiceNumber = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("invoiceDate"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.invoiceDate = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.invoiceDate = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("chargeDetails"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.chargeDetails = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.chargeDetails = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("bookingReference"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.bookingReference = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.bookingReference = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("totalFee"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.totalFee = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.totalFee = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("clearingSequence"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.clearingSequence = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.clearingSequence = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("clearingCount"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.clearingCount = new BigInteger(j.toString());
                    }
                }
                else if (obj instanceof BigInteger){
                    this.clearingCount = (BigInteger)obj;
                }
            }
            return true;
        }
        if (info.name.equals("totalClearingAmount"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.totalClearingAmount = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.totalClearingAmount = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("leg"))
        {
            if(obj!=null)
            {
                if(this.leg==null)
                {
                    this.leg = new java.util.ArrayList< Leg>();
                }
                java.lang.Object j =obj;
                Leg j1= (Leg)__envelope.get(j,Leg.class,false);
                this.leg.add(j1);
            }
            return true;
        }
        if (info.name.equals("numberOfPassengers"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.numberOfPassengers = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.numberOfPassengers = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("reservationSystem"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.reservationSystem = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.reservationSystem = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("processIdentifier"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.processIdentifier = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.processIdentifier = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("iataNumericCode"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.iataNumericCode = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.iataNumericCode = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("ticketIssueDate"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.ticketIssueDate = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.ticketIssueDate = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("electronicTicket"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.electronicTicket = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.electronicTicket = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("originalTicketNumber"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.originalTicketNumber = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.originalTicketNumber = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("purchaseType"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.purchaseType = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.purchaseType = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("creditReasonIndicator"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.creditReasonIndicator = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.creditReasonIndicator = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("ticketUpdateIndicator"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.ticketUpdateIndicator = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.ticketUpdateIndicator = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("planNumber"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.planNumber = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.planNumber = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("arrivalDate"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.arrivalDate = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.arrivalDate = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("ticketRestrictionText"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.ticketRestrictionText = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.ticketRestrictionText = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("exchangeTicketAmount"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.exchangeTicketAmount = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.exchangeTicketAmount = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("exchangeTicketFee"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.exchangeTicketFee = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.exchangeTicketFee = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("journeyType"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.journeyType = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.journeyType = (String)obj;
                }
            }
            return true;
        }
        return false;
    }
    
    public java.lang.Object getOriginalXmlSource()
    {
        return __source;
    }    
    

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return this.agentCode!=null?this.agentCode:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==1)
        {
            return this.agentName!=null?this.agentName:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==2)
        {
            return this.ticketIssuerCity!=null?this.ticketIssuerCity:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==3)
        {
            return this.ticketIssuerState!=null?this.ticketIssuerState:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==4)
        {
            return this.ticketIssuerPostalCode!=null?this.ticketIssuerPostalCode:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==5)
        {
            return this.ticketIssuerCountry!=null?this.ticketIssuerCountry:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==6)
        {
            return this.ticketIssuerAddress!=null?this.ticketIssuerAddress:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==7)
        {
            return this.ticketIssuerCode!=null?this.ticketIssuerCode:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==8)
        {
            return this.ticketIssuerName!=null?this.ticketIssuerName:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==9)
        {
            return this.ticketNumber!=null?this.ticketNumber:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==10)
        {
            return this.checkDigit!=null?this.checkDigit.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==11)
        {
            return this.restrictedTicketIndicator!=null?this.restrictedTicketIndicator.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==12)
        {
            return this.transactionType!=null?this.transactionType:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==13)
        {
            return this.extendedPaymentCode!=null?this.extendedPaymentCode:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==14)
        {
            return this.carrierName!=null?this.carrierName:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==15)
        {
            return this.passengerName!=null?this.passengerName:SoapPrimitive.NullSkip;
        }
        if(propertyIndex>=16 && propertyIndex < 16+this.passenger.size())
        {
            java.lang.Object passenger = this.passenger.get(propertyIndex-(16));
            return passenger!=null?passenger:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex==16+this.passenger.size())
        {
            return this.customerCode!=null?this.customerCode:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==17+this.passenger.size())
        {
            return this.documentType!=null?this.documentType:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==18+this.passenger.size())
        {
            return this.documentNumber!=null?this.documentNumber:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==19+this.passenger.size())
        {
            return this.documentNumberOfParts!=null?this.documentNumberOfParts:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==20+this.passenger.size())
        {
            return this.invoiceNumber!=null?this.invoiceNumber:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==21+this.passenger.size())
        {
            return this.invoiceDate!=null?this.invoiceDate:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==22+this.passenger.size())
        {
            return this.chargeDetails!=null?this.chargeDetails:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==23+this.passenger.size())
        {
            return this.bookingReference!=null?this.bookingReference:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==24+this.passenger.size())
        {
            return this.totalFee!=null?this.totalFee:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==25+this.passenger.size())
        {
            return this.clearingSequence!=null?this.clearingSequence:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==26+this.passenger.size())
        {
            return this.clearingCount!=null?this.clearingCount.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==27+this.passenger.size())
        {
            return this.totalClearingAmount!=null?this.totalClearingAmount:SoapPrimitive.NullSkip;
        }
        if(propertyIndex>=28+this.passenger.size() && propertyIndex < 28+this.passenger.size()+this.leg.size())
        {
            java.lang.Object leg = this.leg.get(propertyIndex-(28+this.passenger.size()));
            return leg!=null?leg:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex==28+this.passenger.size()+this.leg.size())
        {
            return this.numberOfPassengers!=null?this.numberOfPassengers:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==29+this.passenger.size()+this.leg.size())
        {
            return this.reservationSystem!=null?this.reservationSystem:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==30+this.passenger.size()+this.leg.size())
        {
            return this.processIdentifier!=null?this.processIdentifier:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==31+this.passenger.size()+this.leg.size())
        {
            return this.iataNumericCode!=null?this.iataNumericCode:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==32+this.passenger.size()+this.leg.size())
        {
            return this.ticketIssueDate!=null?this.ticketIssueDate:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==33+this.passenger.size()+this.leg.size())
        {
            return this.electronicTicket!=null?this.electronicTicket:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==34+this.passenger.size()+this.leg.size())
        {
            return this.originalTicketNumber!=null?this.originalTicketNumber:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==35+this.passenger.size()+this.leg.size())
        {
            return this.purchaseType!=null?this.purchaseType:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==36+this.passenger.size()+this.leg.size())
        {
            return this.creditReasonIndicator!=null?this.creditReasonIndicator:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==37+this.passenger.size()+this.leg.size())
        {
            return this.ticketUpdateIndicator!=null?this.ticketUpdateIndicator:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==38+this.passenger.size()+this.leg.size())
        {
            return this.planNumber!=null?this.planNumber:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==39+this.passenger.size()+this.leg.size())
        {
            return this.arrivalDate!=null?this.arrivalDate:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==40+this.passenger.size()+this.leg.size())
        {
            return this.ticketRestrictionText!=null?this.ticketRestrictionText:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==41+this.passenger.size()+this.leg.size())
        {
            return this.exchangeTicketAmount!=null?this.exchangeTicketAmount:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==42+this.passenger.size()+this.leg.size())
        {
            return this.exchangeTicketFee!=null?this.exchangeTicketFee:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==43+this.passenger.size()+this.leg.size())
        {
            return this.journeyType!=null?this.journeyType:SoapPrimitive.NullSkip;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 44+passenger.size()+leg.size();
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "agentCode";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==1)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "agentName";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==2)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "ticketIssuerCity";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==3)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "ticketIssuerState";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==4)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "ticketIssuerPostalCode";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==5)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "ticketIssuerCountry";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==6)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "ticketIssuerAddress";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==7)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "ticketIssuerCode";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==8)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "ticketIssuerName";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==9)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "ticketNumber";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==10)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "checkDigit";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==11)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "restrictedTicketIndicator";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==12)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "transactionType";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==13)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "extendedPaymentCode";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==14)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "carrierName";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==15)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "passengerName";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex>=16 && propertyIndex < 16+this.passenger.size())
        {
            info.type = Passenger.class;
            info.name = "passenger";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==16+this.passenger.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "customerCode";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==17+this.passenger.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "documentType";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==18+this.passenger.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "documentNumber";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==19+this.passenger.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "documentNumberOfParts";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==20+this.passenger.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "invoiceNumber";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==21+this.passenger.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "invoiceDate";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==22+this.passenger.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "chargeDetails";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==23+this.passenger.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "bookingReference";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==24+this.passenger.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "totalFee";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==25+this.passenger.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "clearingSequence";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==26+this.passenger.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "clearingCount";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==27+this.passenger.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "totalClearingAmount";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex>=28+this.passenger.size() && propertyIndex < 28+this.passenger.size()+this.leg.size())
        {
            info.type = Leg.class;
            info.name = "leg";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==28+this.passenger.size()+this.leg.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "numberOfPassengers";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==29+this.passenger.size()+this.leg.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "reservationSystem";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==30+this.passenger.size()+this.leg.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "processIdentifier";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==31+this.passenger.size()+this.leg.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "iataNumericCode";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==32+this.passenger.size()+this.leg.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "ticketIssueDate";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==33+this.passenger.size()+this.leg.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "electronicTicket";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==34+this.passenger.size()+this.leg.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "originalTicketNumber";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==35+this.passenger.size()+this.leg.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "purchaseType";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==36+this.passenger.size()+this.leg.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "creditReasonIndicator";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==37+this.passenger.size()+this.leg.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "ticketUpdateIndicator";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==38+this.passenger.size()+this.leg.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "planNumber";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==39+this.passenger.size()+this.leg.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "arrivalDate";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==40+this.passenger.size()+this.leg.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "ticketRestrictionText";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==41+this.passenger.size()+this.leg.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "exchangeTicketAmount";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==42+this.passenger.size()+this.leg.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "exchangeTicketFee";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==43+this.passenger.size()+this.leg.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "journeyType";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

