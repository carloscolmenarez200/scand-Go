package com.cencosud.scanandgo.cybersource.client;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.5.0.6
//
// Created by Quasar Development 
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;

public class RiskUpdateService extends AttributeContainer implements KvmSerializable
{

    
    public String actionCode;
    
    public String recordID;
    
    public String recordName;
    
    public Address negativeAddress;
    
    public String markingReason;
    
    public String markingNotes;
    
    public String markingRequestID;
    
    public String deviceFingerprintSmartID;
    
    public String deviceFingerprintTrueIPAddress;
    
    public String deviceFingerprintProxyIPAddress;
    
    public String run;
    private transient java.lang.Object __source;    
    

    
    
    
    public void loadFromSoap(java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
        if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;
        __source=inObj; 
        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                if(!loadProperty(info,soapObject,__envelope))
                {
                }
            } 
        }
        if (inObj.hasAttribute("run"))
        {	
            java.lang.Object j = inObj.getAttribute("run");
            if (j != null)
            {
                run = j.toString();
            }
        }

    }

    
    protected boolean loadProperty(PropertyInfo info,SoapObject soapObject,ExtendedSoapSerializationEnvelope __envelope)
    {
        java.lang.Object obj = info.getValue();
        if (info.name.equals("actionCode"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.actionCode = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.actionCode = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("recordID"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.recordID = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.recordID = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("recordName"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.recordName = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.recordName = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("negativeAddress"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.negativeAddress = (Address)__envelope.get(j,Address.class,false);
            }
            return true;
        }
        if (info.name.equals("markingReason"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.markingReason = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.markingReason = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("markingNotes"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.markingNotes = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.markingNotes = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("markingRequestID"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.markingRequestID = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.markingRequestID = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("deviceFingerprintSmartID"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.deviceFingerprintSmartID = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.deviceFingerprintSmartID = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("deviceFingerprintTrueIPAddress"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.deviceFingerprintTrueIPAddress = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.deviceFingerprintTrueIPAddress = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("deviceFingerprintProxyIPAddress"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.deviceFingerprintProxyIPAddress = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.deviceFingerprintProxyIPAddress = (String)obj;
                }
            }
            return true;
        }
        return false;
    }
    
    public java.lang.Object getOriginalXmlSource()
    {
        return __source;
    }    
    

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return this.actionCode!=null?this.actionCode:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==1)
        {
            return this.recordID!=null?this.recordID:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==2)
        {
            return this.recordName!=null?this.recordName:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==3)
        {
            return this.negativeAddress!=null?this.negativeAddress:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==4)
        {
            return this.markingReason!=null?this.markingReason:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==5)
        {
            return this.markingNotes!=null?this.markingNotes:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==6)
        {
            return this.markingRequestID!=null?this.markingRequestID:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==7)
        {
            return this.deviceFingerprintSmartID!=null?this.deviceFingerprintSmartID:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==8)
        {
            return this.deviceFingerprintTrueIPAddress!=null?this.deviceFingerprintTrueIPAddress:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==9)
        {
            return this.deviceFingerprintProxyIPAddress!=null?this.deviceFingerprintProxyIPAddress:SoapPrimitive.NullSkip;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 10;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "actionCode";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==1)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "recordID";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==2)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "recordName";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==3)
        {
            info.type = Address.class;
            info.name = "negativeAddress";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==4)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "markingReason";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==5)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "markingNotes";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==6)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "markingRequestID";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==7)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "deviceFingerprintSmartID";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==8)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "deviceFingerprintTrueIPAddress";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==9)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "deviceFingerprintProxyIPAddress";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }



    @Override
    public int getAttributeCount() {
        return 1;
    }
    
    @Override
    public void getAttributeInfo(int index, AttributeInfo info) {
        if(index==0)
        {
            info.name = "run";
            info.namespace= "";
            if(this.run!=null)
            {
                info.setValue(this.run);
            }
            
        }
    }

    @Override
    public void getAttribute(int i, AttributeInfo attributeInfo) {

    }

    @Override
    public void setAttribute(AttributeInfo attributeInfo) {

    }    
}

