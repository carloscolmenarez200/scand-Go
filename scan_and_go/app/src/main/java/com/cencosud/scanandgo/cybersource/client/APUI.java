package com.cencosud.scanandgo.cybersource.client;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.5.0.6
//
// Created by Quasar Development 
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;

public class APUI extends AttributeContainer implements KvmSerializable
{

    
    public String colorBorder;
    
    public String colorBorderSelected;
    
    public String colorButton;
    
    public String colorButtonText;
    
    public String colorCheckbox;
    
    public String colorCheckboxCheckMark;
    
    public String colorHeader;
    
    public String colorLink;
    
    public String colorText;
    
    public String borderRadius;
    
    public String theme;
    private transient java.lang.Object __source;    
    

    
    
    
    public void loadFromSoap(java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
        if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;
        __source=inObj; 
        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                if(!loadProperty(info,soapObject,__envelope))
                {
                }
            } 
        }

    }

    
    protected boolean loadProperty(PropertyInfo info,SoapObject soapObject,ExtendedSoapSerializationEnvelope __envelope)
    {
        java.lang.Object obj = info.getValue();
        if (info.name.equals("colorBorder"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.colorBorder = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.colorBorder = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("colorBorderSelected"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.colorBorderSelected = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.colorBorderSelected = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("colorButton"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.colorButton = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.colorButton = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("colorButtonText"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.colorButtonText = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.colorButtonText = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("colorCheckbox"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.colorCheckbox = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.colorCheckbox = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("colorCheckboxCheckMark"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.colorCheckboxCheckMark = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.colorCheckboxCheckMark = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("colorHeader"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.colorHeader = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.colorHeader = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("colorLink"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.colorLink = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.colorLink = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("colorText"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.colorText = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.colorText = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("borderRadius"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.borderRadius = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.borderRadius = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("theme"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.theme = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.theme = (String)obj;
                }
            }
            return true;
        }
        return false;
    }
    
    public java.lang.Object getOriginalXmlSource()
    {
        return __source;
    }    
    

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return this.colorBorder!=null?this.colorBorder:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==1)
        {
            return this.colorBorderSelected!=null?this.colorBorderSelected:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==2)
        {
            return this.colorButton!=null?this.colorButton:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==3)
        {
            return this.colorButtonText!=null?this.colorButtonText:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==4)
        {
            return this.colorCheckbox!=null?this.colorCheckbox:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==5)
        {
            return this.colorCheckboxCheckMark!=null?this.colorCheckboxCheckMark:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==6)
        {
            return this.colorHeader!=null?this.colorHeader:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==7)
        {
            return this.colorLink!=null?this.colorLink:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==8)
        {
            return this.colorText!=null?this.colorText:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==9)
        {
            return this.borderRadius!=null?this.borderRadius:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==10)
        {
            return this.theme!=null?this.theme:SoapPrimitive.NullSkip;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 11;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "colorBorder";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==1)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "colorBorderSelected";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==2)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "colorButton";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==3)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "colorButtonText";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==4)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "colorCheckbox";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==5)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "colorCheckboxCheckMark";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==6)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "colorHeader";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==7)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "colorLink";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==8)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "colorText";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==9)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "borderRadius";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==10)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "theme";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

