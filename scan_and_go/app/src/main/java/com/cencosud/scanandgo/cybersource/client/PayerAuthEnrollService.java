package com.cencosud.scanandgo.cybersource.client;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.5.0.6
//
// Created by Quasar Development 
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;

public class PayerAuthEnrollService extends AttributeContainer implements KvmSerializable
{

    
    public String httpAccept;
    
    public String httpUserAgent;
    
    public String merchantName;
    
    public String merchantURL;
    
    public String purchaseDescription;
    
    public String purchaseTime;
    
    public String countryCode;
    
    public String acquirerBin;
    
    public String loginID;
    
    public String password;
    
    public String merchantID;
    
    public String overridePaymentMethod;
    
    public String mobilePhone;
    
    public String MCC;
    
    public String productCode;
    
    public String referenceID;
    
    public String marketingOptIn;
    
    public String marketingSource;
    
    public String defaultCard;
    
    public String shipAddressUsageDate;
    
    public String transactionCountDay;
    
    public String transactionCountYear;
    
    public String addCardAttempts;
    
    public String accountPurchases;
    
    public String fraudActivity;
    
    public String paymentAccountDate;
    
    public String alternateAuthenticationMethod;
    
    public String alternateAuthenticationDate;
    
    public String alternateAuthenticationData;
    
    public String challengeRequired;
    
    public String challengeCode;
    
    public String preorder;
    
    public String reorder;
    
    public String preorderDate;
    
    public String giftCardAmount;
    
    public String giftCardCurrency;
    
    public String giftCardCount;
    
    public String messageCategory;
    
    public String npaCode;
    
    public String recurringOriginalPurchaseDate;
    
    public String transactionMode;
    
    public String recurringEndDate;
    
    public String recurringFrequency;
    
    public String merchantNewCustomer;
    
    public String customerCCAlias;
    
    public String installmentTotalCount;
    
    public String authenticationTransactionID;
    
    public String httpUserAccept;
    
    public String mobilePhoneDomestic;
    
    public String pareqChannel;
    
    public String shoppingChannel;
    
    public String authenticationChannel;
    
    public String merchantTTPCredential;
    
    public String run;
    private transient java.lang.Object __source;    
    

    
    
    
    public void loadFromSoap(java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
        if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;
        __source=inObj; 
        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                if(!loadProperty(info,soapObject,__envelope))
                {
                }
            } 
        }
        if (inObj.hasAttribute("run"))
        {	
            java.lang.Object j = inObj.getAttribute("run");
            if (j != null)
            {
                run = j.toString();
            }
        }

    }

    
    protected boolean loadProperty(PropertyInfo info,SoapObject soapObject,ExtendedSoapSerializationEnvelope __envelope)
    {
        java.lang.Object obj = info.getValue();
        if (info.name.equals("httpAccept"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.httpAccept = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.httpAccept = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("httpUserAgent"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.httpUserAgent = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.httpUserAgent = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("merchantName"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.merchantName = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.merchantName = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("merchantURL"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.merchantURL = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.merchantURL = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("purchaseDescription"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.purchaseDescription = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.purchaseDescription = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("purchaseTime"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.purchaseTime = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.purchaseTime = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("countryCode"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.countryCode = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.countryCode = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("acquirerBin"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.acquirerBin = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.acquirerBin = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("loginID"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.loginID = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.loginID = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("password"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.password = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.password = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("merchantID"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.merchantID = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.merchantID = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("overridePaymentMethod"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.overridePaymentMethod = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.overridePaymentMethod = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("mobilePhone"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.mobilePhone = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.mobilePhone = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("MCC"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.MCC = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.MCC = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("productCode"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.productCode = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.productCode = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("referenceID"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.referenceID = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.referenceID = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("marketingOptIn"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.marketingOptIn = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.marketingOptIn = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("marketingSource"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.marketingSource = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.marketingSource = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("defaultCard"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.defaultCard = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.defaultCard = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("shipAddressUsageDate"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.shipAddressUsageDate = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.shipAddressUsageDate = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("transactionCountDay"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.transactionCountDay = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.transactionCountDay = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("transactionCountYear"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.transactionCountYear = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.transactionCountYear = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("addCardAttempts"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.addCardAttempts = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.addCardAttempts = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("accountPurchases"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.accountPurchases = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.accountPurchases = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("fraudActivity"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.fraudActivity = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.fraudActivity = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("paymentAccountDate"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.paymentAccountDate = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.paymentAccountDate = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("alternateAuthenticationMethod"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.alternateAuthenticationMethod = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.alternateAuthenticationMethod = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("alternateAuthenticationDate"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.alternateAuthenticationDate = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.alternateAuthenticationDate = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("alternateAuthenticationData"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.alternateAuthenticationData = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.alternateAuthenticationData = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("challengeRequired"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.challengeRequired = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.challengeRequired = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("challengeCode"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.challengeCode = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.challengeCode = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("preorder"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.preorder = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.preorder = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("reorder"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.reorder = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.reorder = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("preorderDate"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.preorderDate = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.preorderDate = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("giftCardAmount"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.giftCardAmount = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.giftCardAmount = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("giftCardCurrency"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.giftCardCurrency = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.giftCardCurrency = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("giftCardCount"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.giftCardCount = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.giftCardCount = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("messageCategory"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.messageCategory = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.messageCategory = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("npaCode"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.npaCode = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.npaCode = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("recurringOriginalPurchaseDate"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.recurringOriginalPurchaseDate = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.recurringOriginalPurchaseDate = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("transactionMode"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.transactionMode = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.transactionMode = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("recurringEndDate"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.recurringEndDate = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.recurringEndDate = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("recurringFrequency"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.recurringFrequency = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.recurringFrequency = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("merchantNewCustomer"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.merchantNewCustomer = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.merchantNewCustomer = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("customerCCAlias"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.customerCCAlias = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.customerCCAlias = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("installmentTotalCount"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.installmentTotalCount = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.installmentTotalCount = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("authenticationTransactionID"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.authenticationTransactionID = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.authenticationTransactionID = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("httpUserAccept"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.httpUserAccept = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.httpUserAccept = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("mobilePhoneDomestic"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.mobilePhoneDomestic = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.mobilePhoneDomestic = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("pareqChannel"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.pareqChannel = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.pareqChannel = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("shoppingChannel"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.shoppingChannel = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.shoppingChannel = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("authenticationChannel"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.authenticationChannel = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.authenticationChannel = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("merchantTTPCredential"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.merchantTTPCredential = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.merchantTTPCredential = (String)obj;
                }
            }
            return true;
        }
        return false;
    }
    
    public java.lang.Object getOriginalXmlSource()
    {
        return __source;
    }    
    

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return this.httpAccept!=null?this.httpAccept:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==1)
        {
            return this.httpUserAgent!=null?this.httpUserAgent:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==2)
        {
            return this.merchantName!=null?this.merchantName:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==3)
        {
            return this.merchantURL!=null?this.merchantURL:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==4)
        {
            return this.purchaseDescription!=null?this.purchaseDescription:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==5)
        {
            return this.purchaseTime!=null?this.purchaseTime:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==6)
        {
            return this.countryCode!=null?this.countryCode:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==7)
        {
            return this.acquirerBin!=null?this.acquirerBin:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==8)
        {
            return this.loginID!=null?this.loginID:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==9)
        {
            return this.password!=null?this.password:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==10)
        {
            return this.merchantID!=null?this.merchantID:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==11)
        {
            return this.overridePaymentMethod!=null?this.overridePaymentMethod:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==12)
        {
            return this.mobilePhone!=null?this.mobilePhone:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==13)
        {
            return this.MCC!=null?this.MCC:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==14)
        {
            return this.productCode!=null?this.productCode:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==15)
        {
            return this.referenceID!=null?this.referenceID:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==16)
        {
            return this.marketingOptIn!=null?this.marketingOptIn:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==17)
        {
            return this.marketingSource!=null?this.marketingSource:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==18)
        {
            return this.defaultCard!=null?this.defaultCard:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==19)
        {
            return this.shipAddressUsageDate!=null?this.shipAddressUsageDate:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==20)
        {
            return this.transactionCountDay!=null?this.transactionCountDay:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==21)
        {
            return this.transactionCountYear!=null?this.transactionCountYear:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==22)
        {
            return this.addCardAttempts!=null?this.addCardAttempts:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==23)
        {
            return this.accountPurchases!=null?this.accountPurchases:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==24)
        {
            return this.fraudActivity!=null?this.fraudActivity:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==25)
        {
            return this.paymentAccountDate!=null?this.paymentAccountDate:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==26)
        {
            return this.alternateAuthenticationMethod!=null?this.alternateAuthenticationMethod:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==27)
        {
            return this.alternateAuthenticationDate!=null?this.alternateAuthenticationDate:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==28)
        {
            return this.alternateAuthenticationData!=null?this.alternateAuthenticationData:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==29)
        {
            return this.challengeRequired!=null?this.challengeRequired:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==30)
        {
            return this.challengeCode!=null?this.challengeCode:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==31)
        {
            return this.preorder!=null?this.preorder:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==32)
        {
            return this.reorder!=null?this.reorder:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==33)
        {
            return this.preorderDate!=null?this.preorderDate:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==34)
        {
            return this.giftCardAmount!=null?this.giftCardAmount:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==35)
        {
            return this.giftCardCurrency!=null?this.giftCardCurrency:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==36)
        {
            return this.giftCardCount!=null?this.giftCardCount:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==37)
        {
            return this.messageCategory!=null?this.messageCategory:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==38)
        {
            return this.npaCode!=null?this.npaCode:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==39)
        {
            return this.recurringOriginalPurchaseDate!=null?this.recurringOriginalPurchaseDate:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==40)
        {
            return this.transactionMode!=null?this.transactionMode:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==41)
        {
            return this.recurringEndDate!=null?this.recurringEndDate:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==42)
        {
            return this.recurringFrequency!=null?this.recurringFrequency:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==43)
        {
            return this.merchantNewCustomer!=null?this.merchantNewCustomer:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==44)
        {
            return this.customerCCAlias!=null?this.customerCCAlias:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==45)
        {
            return this.installmentTotalCount!=null?this.installmentTotalCount:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==46)
        {
            return this.authenticationTransactionID!=null?this.authenticationTransactionID:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==47)
        {
            return this.httpUserAccept!=null?this.httpUserAccept:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==48)
        {
            return this.mobilePhoneDomestic!=null?this.mobilePhoneDomestic:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==49)
        {
            return this.pareqChannel!=null?this.pareqChannel:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==50)
        {
            return this.shoppingChannel!=null?this.shoppingChannel:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==51)
        {
            return this.authenticationChannel!=null?this.authenticationChannel:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==52)
        {
            return this.merchantTTPCredential!=null?this.merchantTTPCredential:SoapPrimitive.NullSkip;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 53;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "httpAccept";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==1)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "httpUserAgent";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==2)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "merchantName";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==3)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "merchantURL";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==4)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "purchaseDescription";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==5)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "purchaseTime";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==6)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "countryCode";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==7)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "acquirerBin";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==8)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "loginID";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==9)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "password";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==10)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "merchantID";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==11)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "overridePaymentMethod";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==12)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "mobilePhone";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==13)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "MCC";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==14)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "productCode";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==15)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "referenceID";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==16)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "marketingOptIn";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==17)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "marketingSource";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==18)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "defaultCard";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==19)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "shipAddressUsageDate";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==20)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "transactionCountDay";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==21)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "transactionCountYear";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==22)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "addCardAttempts";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==23)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "accountPurchases";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==24)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "fraudActivity";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==25)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "paymentAccountDate";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==26)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "alternateAuthenticationMethod";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==27)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "alternateAuthenticationDate";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==28)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "alternateAuthenticationData";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==29)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "challengeRequired";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==30)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "challengeCode";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==31)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "preorder";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==32)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "reorder";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==33)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "preorderDate";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==34)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "giftCardAmount";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==35)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "giftCardCurrency";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==36)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "giftCardCount";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==37)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "messageCategory";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==38)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "npaCode";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==39)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "recurringOriginalPurchaseDate";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==40)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "transactionMode";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==41)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "recurringEndDate";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==42)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "recurringFrequency";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==43)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "merchantNewCustomer";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==44)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "customerCCAlias";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==45)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "installmentTotalCount";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==46)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "authenticationTransactionID";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==47)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "httpUserAccept";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==48)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "mobilePhoneDomestic";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==49)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "pareqChannel";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==50)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "shoppingChannel";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==51)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "authenticationChannel";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
        if(propertyIndex==52)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "merchantTTPCredential";
            info.namespace= "urn:schemas-cybersource-com:transaction-data-1.146";
        }
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }



    @Override
    public int getAttributeCount() {
        return 1;
    }
    
    @Override
    public void getAttributeInfo(int index, AttributeInfo info) {
        if(index==0)
        {
            info.name = "run";
            info.namespace= "";
            if(this.run!=null)
            {
                info.setValue(this.run);
            }
            
        }
    }

    @Override
    public void getAttribute(int i, AttributeInfo attributeInfo) {

    }

    @Override
    public void setAttribute(AttributeInfo attributeInfo) {

    }    
}

